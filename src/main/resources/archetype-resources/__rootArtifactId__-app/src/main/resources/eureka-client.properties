#if($showComment)
#############################################
# use archaius configuration change configuration file name: eureka.client.props
# refer: com.netflix.discovery.DefaultEurekaClientConfig
#############################################
#end

#if($showDefault)
eureka.namespace=eureka


eureka.environment=${spring.profiles.active}

eureka.client.refresh.interval=30
eureka.appinfo.replicate.interval=30
eureka.appinfo.initial.replicate.time=40
eureka.serviceUrlPollIntervalMs=300
eureka.eurekaServer.gzipContent=true
eureka.eurekaServer.readTimeout=8
eureka.eurekaServer.connectTimeout=5
eureka.eurekaServer.maxTotalConnections=200
eureka.eurekaServer.maxConnectionsPerHost=50
#eureka.eurekaServer.context=${eureka.context}
#eureka.eurekaServer.port=${eureka.port}
#eureka.eurekaServer.domainName=${eureka.domainName}
eureka.shouldUseDns=false
eureka.registration.enabled=true
eureka.preferSameZone=true
eureka.allowRedirects=false
eureka.printDeltaFullDiff=false
eureka.disableDelta=false
eureka.region=us-east-1
#[[
#eureka.{region}.availabilityZones=defaultZone
#]]#
eureka.shouldFilterOnlyUpInstances=true
eureka.eurekaserver.connectionIdleTimeoutInSeconds=30
eureka.shouldFetchRegistry=true
eureka.client.heartbeat.threadPoolSize=5
eureka.client.heartbeat.exponentialBackOffBound=10
eureka.client.cacheRefresh.threadPoolSize=5
eureka.client.cacheRefresh.exponentialBackOffBound=10
eureka.dollarReplacement=_-
eureka.escapeCharReplacement=__
eureka.shouldOnDemandUpdateStatusChange=true
eureka.clientDataAccept=full
#end
#eureka.eurekaServer.proxyHost=
#eureka.eurekaServer.proxyPort=
#eureka.eurekaServer.proxyUserName=
#eureka.eurekaServer.proxyPassword=
#eureka.backupregistry=
#eureka.context=
#eureka.domainName=
#eureka.fetchRemoteRegionsRegistry=
#[[
#eureka.serviceUrl.{zone}=
#]]#
eureka.serviceUrl.default=${eureka.client.serviceUrl.defaultZone}
#eureka.registryRefreshSingleVipAddress=
#eureka.encoderName=
#eureka.decoderName=
#[[
#eureka.experimental.{name}=
#]]#

#if($showComment)
# CloudInstanceConfig validate instaceId for AWS datacenter
# refer: com.netflix.appinfo.RefreshableAmazonInfoProvider#init
#end
eureka.validateInstanceId=false


#############################################
#if($showDefault)
NETFLIX_APP_GROUP=unknown
eureka.traffic.enabled=false
eureka.port=80
eureka.securePort=443
eureka.port.enabled=true
eureka.securePort.enabled=false
eureka.lease.renewalInterval=30
eureka.lease.duration=90
#eureka.vipAddress=hostname.domain:${eureka.port}
eureka.vipAddress=${spring.application.name}
#eureka.secureVipAddress=hostname.domain:${eureka.securePort}
eureka.secureVipAddress=${spring.application.name}
eureka.appGroup=${NETFLIX_APP_GROUP}
eureka.statusPageUrlPath=/Status
eureka.homePageUrlPath=/
eureka.healthCheckUrlPath=/healthcheck
eureka.broadcastPublicIpv4=false
#end
eureka.name=${spring.application.name}

#eureka.asgName=
#eureka.metadata.zone=
eureka.instanceId=${spring.cloud.client.hostname}:${spring.application.name}:${server.port}
#eureka.statusPageUrl=
#eureka.homePageUrl=
#eureka.healthCheckUrl=
#eureka.secureHealthCheckUrl=
#if($showComment)
# java.lang.IllegalArgumentException: No enum constant com.netflix.appinfo.AmazonInfo.MetaDataKey
#end
eureka.defaultAddressResolutionOrder=publicHostname,publicIpv4

#############################################
##### cascaded property files, cascaded configuration files are only supported through static files
netflixconfiguration.properties.nextLoad=application.properties
@next=application.properties