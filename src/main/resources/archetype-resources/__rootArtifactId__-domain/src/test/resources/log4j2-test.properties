##*
# use -Dlog4j2.disableJmx=true to prevent log4j2 MBeans from being created.
#
# use -Dlog4j.configurationFile change default configuration file
# Automatic Configuration priority: log4j2-test.properties > log4j2-test.yaml, log4j2-test.yml > log4j2-test.json, log4j2-test.jsn > log4j2-test.xml
# > log4j2.properties > log4j2.yaml, log4j2.yml > log4j2.json, log4j2.jsn > log4j2.xml.
#
# JSON configuration require jackson-core and jackson-databind, YAML configuration require jackson-databind and jackson-dataformat-yaml.
##*#
#if($showComment)
# https://logging.apache.org/log4j/2.x/manual/configuration.html
#
# http://logging.apache.org/log4j/2.x/performance.html
# the message formatting cost increases sharply with the number of parameters.
# capturing caller location has a similar impact across all logging libraries, and slows down asynchronous logging by about 30-100x.
# http://logging.apache.org/log4j/2.x/manual/async.html
# async logger can give significant performance benefits: higher peak throughput and lower logging response time latency,
# but has drawbacks: exception thrown during the logging process is hard to signal this problem to the application,
# Message is mutable, single core CPU would't harvest better performance.
#
# MemoryMappedFileAppender(no rolling variant, region remap was expensive operation, presized file make tail confuse) > RandomAccessFileAppender > FileAppender
# http://logging.apache.org/log4j/2.x/manual/garbagefree.html
#end

#if($showComment)
# The level of internal Log4j events that should be logged to the console
#end
#if($showDefault)
status=ERROR
shutdownHook=!disable
shutdownTimeout=0
verbose=false
#end
#if($showComment)
# Either "err" for stderr, "out" for stdout, a file path, or a URL.
#end
#if($showDefault)
dest=out
#end
packages=
#[[
name=${bundle:application:spring.application.name}
#]]#
#if($showComment)
# The minimum amount of time, in seconds, that must elapse before the file configuration is checked for changes.
#end
#if($showDefault)
monitorInterval=0
#end
#advertiser=multicastdns

#script.0.type=Script
#script.0.name=
# jsr223: javascript, groovy, beanshell
#script.0.language=
#script.0.text=
#script.1.type=ScriptFile
#script.1.name=
#script.1.path=

#customLevel.ALL=2147483647

#filters=threshold,additivity
#filter.threshold.type=ThresholdFilter
#filter.threshold.onMatch=ACCEPT
#filter.threshold.onMismatch=DENY

#appenders=console,rolling,async
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
#[[
appender.console.layout.pattern = %style{%d{HH:mm:ss.SSS}}{dim} %highlight{${bundle:application:logging.pattern.level}} %style{%pid{????}}{magenta} %style{---}{dim} %style{[%15.15t]}{dim} %style{%-40.40c{1.}}{cyan} %style{:}{dim} %m%n%xEx
#]]#
appender.rolling.type = RollingRandomAccessFile
appender.rolling.name = FILE
#[[
appender.rolling.fileName = ${bundle:application:logging.file}
appender.rolling.filePattern = ${bundle:application:logging.path}/$${date:yyyy-MM}/app-%d{yyyy-MM-dd-HH}-%i.log.gz
#]]#
appender.rolling.layout.type = PatternLayout
#[[
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} ${bundle:application:logging.pattern.level} %pid{????} --- [%t] %-40.40c{1.} : %m%n%xEx
#]]#
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 2
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=1024MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

logger.rolling.name = org.springframework
logger.rolling.level = warn
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = FILE

logger.async.name = ml.iamwhatiam
logger.async.level = info
logger.async.type = asyncLogger
logger.async.additivity = false
logger.async.includeLocation = true
logger.async.appenderRef.rolling.ref = FILE

rootLogger.level = INFO
#rootLogger.type=asyncRoot
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.rolling.ref = FILE
