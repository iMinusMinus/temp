#if($showComment)
#############################################
#####https://docs.sonarqube.org/latest/analysis/analysis-parameters/
#####1. Global properties(Administration > Configuration > General Settings)
#####2.Project properties(Administration > General Settings)
#####3. Project analysis parameters(project analysis configuration file/analyzer configuration file)
#####4. Analysis/Command line parameters(with -D on the command line)
#############################################
#####THIS FILE WAS ONLY USED BY SONAR SCANNER
#####0. -Dproject.settings default location is sonar-project.properties
#####1. override with sonar scanner analysis properties in jenkins
#####2. override with sonar scanner additional arguments
#############################################
#end
#the server URL
sonar.host.url=http://localhost:9000
#The project's unique key
sonar.projectKey=${groupId}:${artifactId}
#Name of the project that will be displayed on the web interface
# sonar.projectName=${project.name}
#The project version
# sonar.projectVersion=${project.version}
#The login or authentication token of a SonarQube user with Execute Analysis permission on the project
# sonar.login=
#The password that goes with the sonar.login username. This should be left blank if an authentication token is being used
# sonar.password=
#Maximum time to wait for the response of a Web Service call (in seconds).
sonar.ws.timeout=60
#The project description
# sonar.projectDescription=${project.description}
#Project home page
# sonar.links.homepage=${project.url}
#Continuous integration
# sonar.links.ci=${project.ciManagement.url}
#Issue tracker
# sonar.links.issue=${project.issueManagement.url}
#Project source repository
# sonar.links.scm=${project.scm.url}

#if($showComment)
#让sonar-scanner从构建工具(Maven/Gradle)中读取源代码、测试代码目录，避免手工指定目录时目录不存在报错
#end
#Comma-separated paths to directories containing main source files
#if(${packagingType} == "pom")
# sonar.sources=${rootArtifactId}-app/pom.xml,${rootArtifactId}-app/src/main/java,${rootArtifactId}-domain/pom.xml,${rootArtifactId}-domain/src/main/java,${rootArtifactId}-api/pom.xml
#end
#Comma-separated paths to directories containing test source files
#if(${packagingType} == "pom")
# sonar.tests=${rootArtifactId}-app/src/test/java,${rootArtifactId}-domain/src/test/java
#end
#Encoding of the source files
sonar.sourceEncoding=UTF-8
#Comma-delimited list of paths to Generic Issue reports
# sonar.externalIssuesReportPaths=
#Assign a date to the analysis. Default current date
# sonar.projectDate=
#Use this property when you need analysis to take place in a directory other than the one from which it was launched
# sonar.projectBaseDir=
#Set the working directory for an analysis triggered with the SonarScanner or the SonarScanner for Ant
sonar.working.directory=.sonar
#This property can be used to explicitly tell SonarQube which SCM plugin should be used to grab SCM data on the projec
sonar.scm.provider=git
#By default, blame information is only retrieved for changed files
sonar.scm.forceReloadAll=false
#For supported engines, files ignored by the SCM
# sonar.scm.exclusions.disabled=
#Overrides the revision, for instance the Git sha1, displayed in analysis results
# sonar.scm.revision=
#The string passed with this property will be stored with the analysis and available in the results of api/project_analyses/search, thus allowing you to later identify a specific analysis and obtain its ID for use with api/project_analyses/set_baseline
#sonar.buildString=
#This property stub allows you to insert custom key/value pairs into the analysis context, which will also be passed forward to webhooks
#sonar.analysis.
#A piece of code is considered duplicated as soon as there are at least 100 duplicated tokens in a row (override with sonar.cpd.${language}.minimumTokens) spread across at least 10 lines of code (override with sonar.cpd.${language}.minimumLines)
sonar.cpd.java.minimumtokens=100
sonar.cpd.java.minimumLines=10
#Control the quantity/Level of logs produced during an analysis
sonar.log.level=INFO
#Add more detail to both client and server-side analysis logs. Activates DEBUG mode for the scanner, and adds client-side environment variables and system properties to server-side log of analysis report processing
sonar.verbose=false
#Display logs to see where the analyzer spends time
sonar.showProfiling=false
#Outputs to the specified file the full list of properties passed to the scanner API as a means to debug analysis
# sonar.scanner.dumpToFile=target/dump.properties
#Set the location where the scanner writes the report-task.txt file containing among other things the ceTaskId. Default value of sonar.working.directory. If set, this value must point to an absolute path
# sonar.scanner.metadataFilePath=

#####JAVA
#Let the analysis take the source version into account, and execute related rules accordingly
sonar.java.source=8
#Comma-separated paths to directories containing the compiled bytecode files corresponding to your source files
#if(${packagingType} == "pom")
sonar.java.binaries=${rootArtifactId}-app/target/classes,${rootArtifactId}-domain/target/classes,${rootArtifactId}-api/target/classes
#else
sonar.java.binaries=${project.build.outputDirectory}
#end
#if($showComment)
# 应用/模块依赖的库，即dependency:tree显示的清单，手动指定不便，使用sonar-maven-plugin自动检测！
#end
#Comma-separated paths to files with third-party libraries (JAR or Zip files) used by your project. Wildcards can be used
# sonar.java.libraries=**/WEB-INF/lib/*.jar

#Comma-separated paths to directories containing the compiled bytecode files corresponding to your test files
#if(${packagingType} == "pom")
sonar.java.test.binaries=${rootArtifactId}-app/target/test-classes,${rootArtifactId}-domain/target/test-classes
#else
sonar.java.test.binaries=${project.build.testOutputDirectory}
#end
#if($showComment)
# 应用/模块依赖的库外加单元测试依赖的库，即dependency:tree显示的清单，手动指定不便，使用sonar-maven-plugin自动检测！
#end
#Comma-separated paths to files with third-party libraries (JAR or Zip files) used by your tests. Wildcards can be used
# sonar.java.test.libraries=

#if($showComment)
# 多模块，则配置为"moduleName.sonarProperty=sonarValue"格式，如：${rootArtifactId}-app.sonar.java.binaries=${WORKSPACE}/${rootArtifactId}-app/target/classes
#end
#sonar.modules=${groupId}\:${rootArtifactId}-api,${groupId}\:${rootArtifactId}-app,${groupId}\:${rootArtifactId}-domain

#####OTHER
#Path to JaCoCo XML coverage reports
#sonar.jacoco.reportPaths=
#if(${packagingType} == "pom")
sonar.coverage.jacoco.xmlReportPaths=${rootArtifactId}-app/target/site/jacoco/jacoco.xml,${rootArtifactId}-domain/target/site/jacoco/jacoco.xml
#else
sonar.coverage.jacoco.xmlReportPaths=${project.build.directory}/site/jacoco/jacoco.xml,build/reports/jacoco/test/jacocoTestReport.xml
#end
#Comma-delimited list of paths to Surefire XML-format reports
#if(${packagingType} == "pom")
sonar.junit.reportPaths=${rootArtifactId}-app/target/surefire-reports,${rootArtifactId}-domain/target/surefire-reports
#else
sonar.junit.reportPaths=${project.build.directory}/surefire-reports
#end
#Comma-delimited list of paths to reports from SpotBugs, FindSecBugs, or FindBugs
#if(${packagingType} == "pom")
sonar.java.spotbugs.reportPaths=${rootArtifactId}-app/target/**bugsXml.xml,${rootArtifactId}-domain/target/**bugsXml.xml,${rootArtifactId}-api/target/**bugsXml.xml
#else
sonar.java.spotbugs.reportPaths=${project.build.directory}/**bugsXml.xml
#end
#Comma-delimited list of paths to reports from PMD
#if(${packagingType} == "pom")
sonar.java.pmd.reportPaths=${rootArtifactId}-app/target/pmd.xml,${rootArtifactId}-domain/target/pmd.xml,${rootArtifactId}-api/target/pmd.xml
#else
sonar.java.pmd.reportPaths=${project.build.directory}/pmd.xml
#end
#Comma-delimited list of paths to reports from Checkstyle
#if(${packagingType} == "pom")
sonar.java.checkstyle.reportPaths=${rootArtifactId}-app/target/checkstyle-result.xml,${rootArtifactId}-domain/target/checkstyle-result.xml,${rootArtifactId}-api/target/checkstyle-result.xml
#else
sonar.java.checkstyle.reportPaths=${project.build.directory}/checkstyle-result.xml
#end
